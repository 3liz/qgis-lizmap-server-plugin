variables:
  FACTORY_PRODUCT_NAME: lizmap_server
  FACTORY_PACKAGE_TYPE: plugin

stages:
- test
- build
- package-infra
- qgis-plugin
- qgis-repository-edit
- qgis-repository-push
- deploy
- release

qgis-server:
  stage: test
  parallel:
    matrix:
      - QGIS_VERSION: [
        "3.16",
        "3.22",
        "3.28",
        "nightly-release",
      ]
  script:
    - make tests FLAVOR=${QGIS_VERSION}
  tags:
    - infrav3

flake:
  stage: test
  before_script:
    - pip3 install --user -r requirements/dev.txt
  script:
    - flake8
  tags:
    - factory

version:
  stage: test
  image:
    name: $REGISTRY_URI/infra/ci-tools:latest
  script:
    - version-helper
  tags:
    - factory-plain
  artifacts:
    reports:
      dotenv: build.env

package-zip:
  dependencies:
    - version
  stage: build
  image: $REGISTRY_URI/qgis-plugin-ci:latest
  script:
    - >
      qgis-plugin-ci
      package ${VERSION}
      --plugin-repo-url https://packages.3liz.org/pub/${FACTORY_PRODUCT_NAME}-qgis-plugin/${STATUS}/
    # For infraV2 infraV3
    # On a tag, the zip will be the existing already
    - cp ${FACTORY_PRODUCT_NAME}.${VERSION}.zip lizmap_server.${CI_COMMIT_REF_NAME}.zip || true
  tags:
    - infrav3-plain
  artifacts:
    untracked: true
    expose_as: 'QGIS package'
    paths:
      # For infraV2 infraV3
      - ${FACTORY_PRODUCT_NAME}.${CI_COMMIT_REF_NAME}.zip
      - ${FACTORY_PRODUCT_NAME}.${VERSION}.zip
      - plugins.xml

push-zip-fetch-repo:
  dependencies:
    - version
    - package-zip
  stage: qgis-plugin
  script:
    # Upload into the plugin directory
    - upload_to_packages_server ${FACTORY_PRODUCT_NAME}.${VERSION}.zip pub/${FACTORY_PRODUCT_NAME}-qgis-plugin/${STATUS}/
    - upload_to_packages_server plugins.xml pub/${FACTORY_PRODUCT_NAME}-qgis-plugin/${STATUS}/

    # Fetch XML files
    - mkdir tmp_repository
    - pull_folder_from_packages_server pub/server-plugins-repository/${STATUS}/ tmp_repository

    # This CI job is running as "fabric" user, the next job is "factory"
    - chmod 777 -R tmp_repository/
  tags:
    - fabric
  artifacts:
    paths:
      - tmp_repository/*.xml

edit-repository:
  stage: qgis-repository-edit
  dependencies:
    - package-zip
    - push-zip-fetch-repo
  before_script:
    - PATH=$PATH:~/.local/bin
    - pip3 install --user qgis-plugin-repo
  script:
    - qgis-plugin-repo merge plugins.xml tmp_repository/*.xml
  tags:
    - factory
  artifacts:
    untracked: true
    paths:
      - tmp_repository/*.xml

push-repository:
  stage: qgis-repository-push
  dependencies:
    - version
    - edit-repository
  script:
    - upload_folder_to_packages_server tmp_repository/ pub/server-plugins-repository/${STATUS}/
  tags:
    - fabric

# Dev for infra-V2 and infra-V3
# For snap, artifact available : lizmap_server.master.zip
# For prod, artifact available : lizmap_server.${CI_COMMIT_REF_NAME}.zip

.infrav3-package:
  dependencies:
    - version
    - package-zip
  script:
    - $FACTORY_SCRIPTS/make-package-$CI_STAGING qgis_lizmap_server ${VERSION} ${FACTORY_PRODUCT_NAME} qgis-plugin
  tags:
    - infrav3
  variables:
    CI_ARCHIVE: ${FACTORY_PRODUCT_NAME}.${VERSION}.zip

deploy_snap:infrav3:
  extends: .infrav3-package
  stage: deploy
  environment:
    name: snap
  variables:
    CI_STAGING: snapshot

release_prod:infrav3:
  extends: .infrav3-package
  stage: release
  environment:
    name: production
  only:
    - tags
  variables:
    CI_STAGING: release


deploy:infrav2:
  stage: deploy
  dependencies:
    - push-repository
  script:
    - update-snap-qgis-plugins
  environment:
    name: snap
  only:
    refs:
      - tags
      - master
  tags:
    - fabric

tickets:
  stage: release
  only:
    - tags
  image:
    name: $REGISTRY_URI/infra/ci-tools:latest
  script:
    - create_ticket.py
  tags:
    - factory-plain
